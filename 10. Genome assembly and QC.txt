## Genome assembly 

### Facing AttributeError: module 'collections' has no attribute 'Hashable' when running Spades
sed -i 's/collections\.Hashable/collections\.abc\.Hashable/g' /home/guilherme/miniconda3/envs/genome-analysis/share/spades-3.13.0-0/share/spades/pyyaml3/constructor.py


### Checking Spades installation before running it 
~/miniconda3/envs/genome-analysis/bin/spades.py --test # ========= TEST PASSED CORRECTLY.

### Running Spades genome assembler 
mkdir assembled_genomes

input="/home/guilherme/Documents/novogene_genomes_feb24/NovogeneFeb2024/usftp21.novogene.com/01.RawData/mangrove_Genomes/all_fastq/flash_output"
for file in "$input"/*.fastq; do
    filename=$(basename -- "$file")
    filename_no_ext="${filename%.*.*}" 
    
    assembly_dir="/home/guilherme/Documents/novogene_genomes_feb24/NovogeneFeb2024/usftp21.novogene.com/01.RawData/mangrove_Genomes/assembled_genomes/${filename_no_ext}_assembly"
    mkdir -p "$assembly_dir" # Create a directory for the current genome assembly to store this output 
    
    ~/miniconda3/envs/genome-analysis/bin/spades.py -o "$assembly_dir" --merged "$filename_no_ext.extendedFrags.fastq" -s "$filename_no_ext.notCombined_1.fastq" -s "$filename_no_ext.notCombined_2.fastq"
done

### Running plasmidSPAdes - to recover only plasmids from WGS 
mkdir plasmidSPAdes_output

input="/home/guilherme/Documents/novogene_genomes_feb24/NovogeneFeb2024/usftp21.novogene.com/01.RawData/mangrove_Genomes/all_fastq/flash_output"
for file in "$input"/*.fastq; do
    filename=$(basename -- "$file")
    filename_no_ext="${filename%.*.*}"

    assembly_dir="/home/guilherme/Documents/novogene_genomes_feb24/NovogeneFeb2024/usftp21.novogene.com/01.RawData/mangrove_Genomes/plasmidSPAdes_output/${filename_no_ext}_plasmid_assembly"
    mkdir -p "$assembly_dir" # Create a directory for the current genome assembly to store this output 
    
    ~/miniconda3/envs/genome-analysis/bin/spades.py -o "$assembly_dir" --merged "$filename_no_ext.extendedFrags.fastq" -s "$filename_no_ext.notCombined_1.fastq" -s "$filename_no_ext.notCombined_2.fastq" --plasmid
done


## Renaming scaffold files so they contain the isolate code in their name and are located un a different directory altogether 

### For genome assemblies
mkdir all_scaffolds
for dir in *_assembly/; do
    echo "Renaming/moving scaffold file from $dir"
    isolate=$(basename -- "$dir" | sed 's/_.*//') 
    cd "$dir"
    mv scaffolds.fasta ../all_scaffolds/"$isolate"_scaffold.fasta 
    cd ..
done

### For plasmid assemblies
mkdir all_scaffolds
for dir in *_plasmid_assembly/; do
    echo "Renaming/moving scaffold file from $dir"
    isolate=$(basename -- "$dir" | sed 's/_.*//') 
    cd "$dir"
    scp scaffolds.fasta ../all_scaffolds/"$isolate"_plasmids.fasta 
    cd ..
done

## Quality control of assembled genomes 

### with CheckM
#conda activate checkm-genome 
#checkm lineage_wf all_scaffolds checkm_output -x fasta ############# NOT ENOUGH RAM MEMORY TO PLACE BINS IN REF GENOME TREE
#checkm len_hist genome_files lenghist_plots # might be interesting to do with fewer genomes 

### with QUAST - produces better plots of several quality metrics, but don't inform explicitly about % completeness/contamination
~/guilherme/miniconda3/envs/quast/bin/quast.py *_scaffold.fasta # for genomes

~/guilherme/miniconda3/envs/quast/bin/quast.py *_plasmids.fasta # for plasmids 
mv quast_results/ quast_results_plasmids
